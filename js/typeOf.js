/*************************
 * Преобразование типов Javascript
 */

//Преборазование в строковое значение
// let value = true;
// alert(typeof value);

// value = String(value); // используем булевое значение и преобразуем с помощью функции String
// console.log(typeof (value));  // проверяем какого типа переменная (value)

//Преобразование в цифры
// let strType = '456';
// let sum;
// let secondByte = 10;

// sum = Number(strType); // преобразование строкового числа 456 в численное
// console.log (sum + secondByte); // # TODO: разобраться почему выводит NAN в консоле // решено
/* Решил баг из того что использовал тип value из примера выше, а так де использовывал приопределние переменной,
сразу после присваивания, # TODO: нужно разобраться с переобределнием переменной  */


let anotherStr = '610';
let anotherNum = 10;

let sums = Number(anotherStr) + anotherNum;

console.log(sums); //# FIXME: тут выводит undefined, переписать как разберусь с функциями // решено, убрал пока функцию

// /* Задача на преобразование типов */
// "" + 1 + 0 // 10
// "" - 1 + 0 // - 10 //ошибка // правильный ответ -1
// true + false // 1
// 6 / "3" // undefined // ошибка // правильный ответ будет 2
// "2" * "3" // будешь 6 правда не поняитно почему // #TODO: повторить умножение строк
// 4 + 5 + "px" // 9px
// "$" + 4 + 5 // $45
// "4" - 2 //2
// "4px" - 2 //NaN
// 7 / 0 //undefined // даун 7 / 0 это Infinity
// "  -9  " + 5 // -4 // не верно когда есть пробелы будет -9    5
// "  -9  " - 5 //Nan
// /*
// * ошибка правильный ответ будет -14 так как число 5 становиться -5, fа у строкового значения -9 обрезаются края
// *  */
//
// null + 1 // 1
// undefined + 1 //undefined
// " \t \n" - 2 // undefined // пробельные символы, такие как \t и \n по краям строки игнорируются при преобразовании в число, так что строка \t \n
